#include <iostream>
#include <algorithm>
#include <bits/stdc++.h>

using namespace std;

struct Node{

int data = 0;
Node* next {};

Node(int data): data(data){

}

};

class LinkedList{

private:
    Node* head {};
    Node* tail {};
    int length = 0;

public:

    void print(){
        for(Node* cur = head ; cur ; cur = cur->next){
            cout << cur->data << " ";
        }cout << endl;

    }

    void insert_end(int val){

        Node* new_node = new Node(val);
        if(head == nullptr)
            head = tail = new_node;
        else {
            tail->next = new_node;
            tail = new_node;
        }
        length ++;

    }

    bool IS_Same_Lists_data(LinkedList& list2){

        if (list2.length != length)
            return false;

        Node* cur1 = head;
        Node* cur2 = list2.head;

        for(int i = 0 ; i < length ; i ++){
            if(cur1->data != cur2->data)
                return false;
            cur1 = cur1->next;
            cur2 = cur2->next;
        }

        return cur1 == nullptr && cur2 == nullptr;
    }

    bool IS_Same_Lists_data2(LinkedList& list2){

        Node* cur1 = head;
        Node* cur2 = list2.head;

        while(cur1 != nullptr && cur2 != nullptr){

            if(cur1->data != cur2->data)
                return false;

            cur1 = cur1->next;
            cur2 = cur2->next;


        }

            return cur1 == nullptr && cur2 == nullptr;
    }


};


int main()
{
    cout << "Hello world!" << endl;

    LinkedList list;

    cout << "Insert"<<endl;
    list.insert_end(1);
    list.insert_end(200);
    list.insert_end(3);
    list.insert_end(4);

    cout << "print"<<endl;
    list.print();

    LinkedList list2;

    cout << "Insert List 2"<<endl;
    list2.insert_end(1);
    list2.insert_end(44);
    list2.insert_end(3);
    list2.insert_end(4);

    cout << "print List 2"<<endl;
    list2.print();

    /*
    bool res = list.IS_Same_Lists_data(list2);
    cout << res << endl;
    */

    bool res2 = list.IS_Same_Lists_data2(list2);
    cout << res2 << endl;








    return 0;
}
